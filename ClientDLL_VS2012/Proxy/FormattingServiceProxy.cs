//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkiData.CP.FormatService.Contracts
{
    using System.Runtime.Serialization;
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormatTypeAccountData", Namespace="http://schemas.datacontract.org/2004/07/SkiData.CP.FormatService.Contracts")]
    public partial class FormatTypeAccountData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BalanceField;
        
        private SkiData.CP.FormatService.Contracts.BookingData[] BookingsField;
        
        private System.Guid FormatTypeIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SkiData.CP.FormatService.Contracts.BookingData[] Bookings
        {
            get
            {
                return this.BookingsField;
            }
            set
            {
                this.BookingsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormatTypeId
        {
            get
            {
                return this.FormatTypeIdField;
            }
            set
            {
                this.FormatTypeIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookingData", Namespace="http://schemas.datacontract.org/2004/07/SkiData.CP.FormatService.Contracts")]
    public partial class BookingData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DateTimeField;
        
        private string DescriptionField;
        
        private int QuantityField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime
        {
            get
            {
                return this.DateTimeField;
            }
            set
            {
                this.DateTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchInfoData", Namespace="http://schemas.datacontract.org/2004/07/SkiData.CP.FormatService.Contracts")]
    public partial class BatchInfoData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid BatchIdField;
        
        private System.Guid FormatTypeIdField;
        
        private bool IsFinishedField;
        
        private System.DateTime PlacedField;
        
        private int QuantityField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId
        {
            get
            {
                return this.BatchIdField;
            }
            set
            {
                this.BatchIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormatTypeId
        {
            get
            {
                return this.FormatTypeIdField;
            }
            set
            {
                this.FormatTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished
        {
            get
            {
                return this.IsFinishedField;
            }
            set
            {
                this.IsFinishedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Placed
        {
            get
            {
                return this.PlacedField;
            }
            set
            {
                this.PlacedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormatTypeData", Namespace="http://schemas.datacontract.org/2004/07/SkiData.CP.FormatService.Contracts")]
    public partial class FormatTypeData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool DoSetDtaFlagField;
        
        private System.Guid FormatTypeIdField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DoSetDtaFlag
        {
            get
            {
                return this.DoSetDtaFlagField;
            }
            set
            {
                this.DoSetDtaFlagField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormatTypeId
        {
            get
            {
                return this.FormatTypeIdField;
            }
            set
            {
                this.FormatTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormattedData", Namespace="http://schemas.datacontract.org/2004/07/SkiData.CP.FormatService.Contracts")]
    public partial class FormattedData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private SkiData.CP.FormatService.Contracts.BlockData[] BlocksField;
        
        private System.Nullable<short> DsfField;
        
        private ulong UidField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SkiData.CP.FormatService.Contracts.BlockData[] Blocks
        {
            get
            {
                return this.BlocksField;
            }
            set
            {
                this.BlocksField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Dsf
        {
            get
            {
                return this.DsfField;
            }
            set
            {
                this.DsfField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Uid
        {
            get
            {
                return this.UidField;
            }
            set
            {
                this.UidField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockData", Namespace="http://schemas.datacontract.org/2004/07/SkiData.CP.FormatService.Contracts")]
    public partial class BlockData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BlockNumberField;
        
        private string BlockValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlockNumber
        {
            get
            {
                return this.BlockNumberField;
            }
            set
            {
                this.BlockNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockValue
        {
            get
            {
                return this.BlockValueField;
            }
            set
            {
                this.BlockValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContingentData", Namespace="http://schemas.datacontract.org/2004/07/SkiData.CP.FormatService.Contracts")]
    public partial class ContingentData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BalanceField;
        
        private System.Guid FormatTypeIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormatTypeId
        {
            get
            {
                return this.FormatTypeIdField;
            }
            set
            {
                this.FormatTypeIdField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IFormattingService")]
public interface IFormattingService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetAccountStatement", ReplyAction="http://tempuri.org/IFormattingService/GetAccountStatementResponse")]
    SkiData.CP.FormatService.Contracts.FormatTypeAccountData[] GetAccountStatement();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetAccountStatement", ReplyAction="http://tempuri.org/IFormattingService/GetAccountStatementResponse")]
    System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormatTypeAccountData[]> GetAccountStatementAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetAllBatches", ReplyAction="http://tempuri.org/IFormattingService/GetAllBatchesResponse")]
    SkiData.CP.FormatService.Contracts.BatchInfoData[] GetAllBatches(bool openOnly);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetAllBatches", ReplyAction="http://tempuri.org/IFormattingService/GetAllBatchesResponse")]
    System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.BatchInfoData[]> GetAllBatchesAsync(bool openOnly);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetAvailableFormatTypes", ReplyAction="http://tempuri.org/IFormattingService/GetAvailableFormatTypesResponse")]
    SkiData.CP.FormatService.Contracts.FormatTypeData[] GetAvailableFormatTypes();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetAvailableFormatTypes", ReplyAction="http://tempuri.org/IFormattingService/GetAvailableFormatTypesResponse")]
    System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormatTypeData[]> GetAvailableFormatTypesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetBatchData", ReplyAction="http://tempuri.org/IFormattingService/GetBatchDataResponse")]
    SkiData.CP.FormatService.Contracts.FormattedData[] GetBatchData(System.Guid batchId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetBatchData", ReplyAction="http://tempuri.org/IFormattingService/GetBatchDataResponse")]
    System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormattedData[]> GetBatchDataAsync(System.Guid batchId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetContingents", ReplyAction="http://tempuri.org/IFormattingService/GetContingentsResponse")]
    SkiData.CP.FormatService.Contracts.ContingentData[] GetContingents();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetContingents", ReplyAction="http://tempuri.org/IFormattingService/GetContingentsResponse")]
    System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.ContingentData[]> GetContingentsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetSingleUidData", ReplyAction="http://tempuri.org/IFormattingService/GetSingleUidDataResponse")]
    SkiData.CP.FormatService.Contracts.FormattedData GetSingleUidData(ulong uid, System.Guid formatTypeId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetSingleUidData", ReplyAction="http://tempuri.org/IFormattingService/GetSingleUidDataResponse")]
    System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormattedData> GetSingleUidDataAsync(ulong uid, System.Guid formatTypeId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetVersion", ReplyAction="http://tempuri.org/IFormattingService/GetVersionResponse")]
    string GetVersion();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/GetVersion", ReplyAction="http://tempuri.org/IFormattingService/GetVersionResponse")]
    System.Threading.Tasks.Task<string> GetVersionAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/IsBatchFinished", ReplyAction="http://tempuri.org/IFormattingService/IsBatchFinishedResponse")]
    bool IsBatchFinished(System.Guid batchId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/IsBatchFinished", ReplyAction="http://tempuri.org/IFormattingService/IsBatchFinishedResponse")]
    System.Threading.Tasks.Task<bool> IsBatchFinishedAsync(System.Guid batchId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/PlaceUidBatch", ReplyAction="http://tempuri.org/IFormattingService/PlaceUidBatchResponse")]
    System.Guid PlaceUidBatch(ulong[] uids, System.Guid formatTypeId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormattingService/PlaceUidBatch", ReplyAction="http://tempuri.org/IFormattingService/PlaceUidBatchResponse")]
    System.Threading.Tasks.Task<System.Guid> PlaceUidBatchAsync(ulong[] uids, System.Guid formatTypeId);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IFormattingServiceChannel : IFormattingService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FormattingServiceClient : System.ServiceModel.ClientBase<IFormattingService>, IFormattingService
{
    
    public FormattingServiceClient()
    {
    }
    
    public FormattingServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FormattingServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FormattingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FormattingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public SkiData.CP.FormatService.Contracts.FormatTypeAccountData[] GetAccountStatement()
    {
        return base.Channel.GetAccountStatement();
    }
    
    public System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormatTypeAccountData[]> GetAccountStatementAsync()
    {
        return base.Channel.GetAccountStatementAsync();
    }
    
    public SkiData.CP.FormatService.Contracts.BatchInfoData[] GetAllBatches(bool openOnly)
    {
        return base.Channel.GetAllBatches(openOnly);
    }
    
    public System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.BatchInfoData[]> GetAllBatchesAsync(bool openOnly)
    {
        return base.Channel.GetAllBatchesAsync(openOnly);
    }
    
    public SkiData.CP.FormatService.Contracts.FormatTypeData[] GetAvailableFormatTypes()
    {
        return base.Channel.GetAvailableFormatTypes();
    }
    
    public System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormatTypeData[]> GetAvailableFormatTypesAsync()
    {
        return base.Channel.GetAvailableFormatTypesAsync();
    }
    
    public SkiData.CP.FormatService.Contracts.FormattedData[] GetBatchData(System.Guid batchId)
    {
        return base.Channel.GetBatchData(batchId);
    }
    
    public System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormattedData[]> GetBatchDataAsync(System.Guid batchId)
    {
        return base.Channel.GetBatchDataAsync(batchId);
    }
    
    public SkiData.CP.FormatService.Contracts.ContingentData[] GetContingents()
    {
        return base.Channel.GetContingents();
    }
    
    public System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.ContingentData[]> GetContingentsAsync()
    {
        return base.Channel.GetContingentsAsync();
    }
    
    public SkiData.CP.FormatService.Contracts.FormattedData GetSingleUidData(ulong uid, System.Guid formatTypeId)
    {
        return base.Channel.GetSingleUidData(uid, formatTypeId);
    }
    
    public System.Threading.Tasks.Task<SkiData.CP.FormatService.Contracts.FormattedData> GetSingleUidDataAsync(ulong uid, System.Guid formatTypeId)
    {
        return base.Channel.GetSingleUidDataAsync(uid, formatTypeId);
    }
    
    public string GetVersion()
    {
        return base.Channel.GetVersion();
    }
    
    public System.Threading.Tasks.Task<string> GetVersionAsync()
    {
        return base.Channel.GetVersionAsync();
    }
    
    public bool IsBatchFinished(System.Guid batchId)
    {
        return base.Channel.IsBatchFinished(batchId);
    }
    
    public System.Threading.Tasks.Task<bool> IsBatchFinishedAsync(System.Guid batchId)
    {
        return base.Channel.IsBatchFinishedAsync(batchId);
    }
    
    public System.Guid PlaceUidBatch(ulong[] uids, System.Guid formatTypeId)
    {
        return base.Channel.PlaceUidBatch(uids, formatTypeId);
    }
    
    public System.Threading.Tasks.Task<System.Guid> PlaceUidBatchAsync(ulong[] uids, System.Guid formatTypeId)
    {
        return base.Channel.PlaceUidBatchAsync(uids, formatTypeId);
    }
}
